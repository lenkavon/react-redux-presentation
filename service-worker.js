"use strict";var precacheConfig=[["/react-redux-presentation/index.html","3d5773140da45b18c260cdab7dd857a1"],["/react-redux-presentation/static/css/main.653da357.css","521def3ae35e5b12d25e0300c45174f2"],["/react-redux-presentation/static/js/main.dc8e4848.js","0f2c5aa7a4904e04450052a3e82bb01d"],["/react-redux-presentation/static/media/DOM.779d0378.png","779d03782ba8c3b1abd5b3814a3b13d6"],["/react-redux-presentation/static/media/Diff.cc861092.png","cc8610925594b9fbdecd7405fbb12d04"],["/react-redux-presentation/static/media/Patch.b2ef796c.png","b2ef796c9083c4d8a61fa5a17ceced53"],["/react-redux-presentation/static/media/ReactLogo.4d4c93dd.png","4d4c93dd6e619e612b99451ff267d4dc"],["/react-redux-presentation/static/media/ReduxFlow.56c2d5e7.png","56c2d5e745c37204ff4b5056359e82a8"],["/react-redux-presentation/static/media/ReduxLogo.89b78746.png","89b78746b2e53281d1ebe6d764a49e0d"],["/react-redux-presentation/static/media/ReduxSchema.327e1eac.png","327e1eac480722c001d6c31acb76105c"],["/react-redux-presentation/static/media/ReduxUpdate.3f7144bc.svg","3f7144bc6d26e2789ef1a43fbe79c45a"],["/react-redux-presentation/static/media/Render.34d74ebb.png","34d74ebb59d5a283c59c36b499e87f04"],["/react-redux-presentation/static/media/ShadowDom.bc9a1af8.png","bc9a1af8665404f9f94ec5c9fd512836"],["/react-redux-presentation/static/media/dataEvents.18d2688d.png","18d2688dc343bc242d84942be9da3754"],["/react-redux-presentation/static/media/eventup.7a8e48a3.png","7a8e48a30f71bed5e9e22a39745daa0c"],["/react-redux-presentation/static/media/passdown.6b3fde39.png","6b3fde399ef5beb57ae32c5f2fe82781"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,n,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return n.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],a=new URL(t,self.location),r=createCacheKey(a,hashParamName,n,/\.\w{8}\./);return[a.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return a.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!n.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,n=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),a="index.html";(e=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,a),e=urlsToCacheKeys.has(n));var r="/react-redux-presentation/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(n=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(n)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});